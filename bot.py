import telebot
from telebot import types
import mysql.connector
from dotenv import load_dotenv
import os
load_dotenv("config.env")  # –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ config.env

TOKEN = os.getenv("TELEGRAM_TOKEN")
bot = telebot.TeleBot(TOKEN)

from db import connect_db # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–¥
from bot_random_coffee import random_coffee # Random Coffee
from bot_feedback import feedback # –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
from bot_programs_search import program_tasks # –ü–æ–∏—Å–∫ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
from bot_dates import important_dates # –í–∞–∂–Ω—ã–µ –¥–∞—Ç—ã
from bot_llm_task import llm_tasks # –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã

user_data = {}
def get_user_from_db(user_id):
    try:
        conn = connect_db()
        with conn.cursor() as cursor:
            cursor.execute("SELECT username FROM users WHERE id = %s", (user_id,))
            return cursor.fetchone()
    except Exception as e:
        print(f"DB error: {e}")
    finally:
        if conn:
            conn.close()

@bot.message_handler(commands=['start'])
def start_handler(message):
    user_id = message.chat.id
    user = get_user_from_db(user_id)

    if user:
        name = user[0]
        bot.send_message(user_id, f"–ü—Ä–∏–≤–µ—Ç, {name}! –†–∞–¥ —Å–Ω–æ–≤–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å üëã")
        show_main_menu(user_id)
    else:
        bot.send_message(user_id, "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
        user_data[user_id] = {'step': 'waiting_for_name'}

@bot.message_handler(func=lambda message: user_data.get(message.chat.id, {}).get('step') == 'waiting_for_name')
def get_name(message):
    user_id = message.chat.id
    name = message.text.strip()
    user_data[user_id]['name'] = name

    username = message.from_user.username
    if not username:
        bot.send_message(user_id, "–£ —Ç–µ–±—è –Ω–µ —É–∫–∞–∑–∞–Ω Telegram username. –í–≤–µ–¥–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π –Ω–∏–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, @yourname):")
        user_data[user_id]['step'] = 'waiting_for_manual_telegram'
    else:
        user_data[user_id]['telegram_candidate'] = f"@{username}"
        user_data[user_id]['step'] = 'waiting_for_telegram_confirmation'
        markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add(KeyboardButton("–î–∞"), KeyboardButton("–ù–µ—Ç"))
        bot.send_message(user_id, f"–≠—Ç–æ —Ç–≤–æ–π Telegram: @{username}?", reply_markup=markup)

@bot.message_handler(func=lambda message: user_data.get(message.chat.id, {}).get('step') == 'waiting_for_telegram_confirmation')
def handle_telegram_confirmation(message):
    user_id = message.chat.id
    answer = message.text.strip().lower()

    if answer == "–¥–∞":
        user_data[user_id]['telegram'] = user_data[user_id]['telegram_candidate']
        finalize_user_setup(user_id)
    elif answer == "–Ω–µ—Ç":
        user_data[user_id]['step'] = 'waiting_for_manual_telegram'
        bot.send_message(user_id, "–•–æ—Ä–æ—à–æ, –≤–≤–µ–¥–∏ —Å–≤–æ–π Telegram –Ω–∏–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, @yourname):")
    else:
        bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ ¬´–î–∞¬ª –∏–ª–∏ ¬´–ù–µ—Ç¬ª")

@bot.message_handler(func=lambda message: user_data.get(message.chat.id, {}).get('step') == 'waiting_for_manual_telegram')
def handle_manual_telegram(message):
    user_id = message.chat.id
    telegram_input = message.text.strip()
    if not telegram_input.startswith("@"):
        telegram_input = "@" + telegram_input

    user_data[user_id]['telegram'] = telegram_input
    finalize_user_setup(user_id)
    
# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ 
def finalize_user_setup(user_id):
    name = user_data[user_id]['name']
    telegram = user_data[user_id]['telegram']
    bot.send_message(user_id, f"–°–ø–∞—Å–∏–±–æ, {name}! –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º –≤ –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—É üéì")
    show_main_menu(user_id)
    save_user_to_db(user_id, name, telegram)
    user_data[user_id]['step'] = 'done'
    
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞    
def show_main_menu(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–í—ã–±—Ä–∞—Ç—å –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—É")
    btn2 = types.KeyboardButton("–í–∞–∂–Ω—ã–µ –¥–∞—Ç—ã")
    btn3 = types.KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å üíô")
    btn4 = types.KeyboardButton("Random Coffee")
    btn5 = types.KeyboardButton("–ü–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∏–≤–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º (–∏–ª–∏ —Å–æ–æ–±—â–∏—Ç—å –æ –±–∞–≥–µ)")
    markup.add(btn1, btn2)
    markup.add(btn3, btn4)
    markup.add(btn5)

    bot.send_message(chat_id, "–ß–µ–º —Ö–æ—á–µ—à—å –∑–∞–Ω—è—Ç—å—Å—è?", reply_markup=markup)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥ 
def save_user_to_db(user_id, name, telegram_name):
    conn = connect_db()
    cursor = conn.cursor()
    query = """
    INSERT INTO users (id, username, telegram_name)
    VALUES (%s, %s, %s)
    ON DUPLICATE KEY UPDATE username = VALUES(username), telegram_name = VALUES(telegram_name)
    """
    cursor.execute(query, (user_id, name, telegram_name))
    conn.commit()
    cursor.close()
    conn.close()

feedback(bot, show_main_menu) 
program_tasks(bot, show_main_menu)
important_dates(bot, show_main_menu)
random_coffee(bot, show_main_menu)
llm_tasks(bot, show_main_menu)

bot.polling()